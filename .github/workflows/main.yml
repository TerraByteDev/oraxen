name: Build & Release
# For development purposes

on:
  #pull_request:
    #types: [closed]
    #branches: [master]
  push:
    branches:
      - 'master'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    #if: >-
      #(contains(github.event.pull_request.labels.*.name, 'release'))
     # && github.event.pull_request.merged == true
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      
      - name: Get plugin version
        id: plugin_version
        shell: bash
        run: |
          version=$(grep "^pluginVersion=" gradle.properties | cut -d'=' -f2)
          echo "version=$version" >> $GITHUB_OUTPUT
      
      - name: Set outputs
        id: short_sha
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17
          cache: 'gradle'
      
      - name: Grant Runners Execute Permission
        run: chmod +x gradlew
        
      - name: Build with Gradle
        run: ./gradlew build
        continue-on-error: true

      - name: Archive Repository
        run: |
          # Create a zip file of the entire repository contents
          zip -r dev_env.zip .
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: Oraxen-v${{ steps.plugin_version.outputs.version }}
          path: dev_env.zip
      
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: Oraxen-v${{ steps.plugin_version.outputs.version }}
          path: build/libs/*.jar
